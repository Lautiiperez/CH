Gu√≠a de ejercicios complementarios
Python
Editar: nombre del curso

¬øQu√© es?
 
La Gu√≠a fue creada para que puedas focalizar en reforzar y afianzar, potenciar y poner en pr√°ctica los saberes adquiridos en clase. No tiene correcci√≥n ni los ejercicios ser√°n evaluados dentro de las entregas.

¬°A practicar! üòâ


Nota: Te recomendamos que descargues el archivo para que lo puedas editar



Sobre los ejercicios
Ejercicios: son propuestas de ejercitaci√≥n pr√°ctica complementaria, basadas en problem√°ticas comunes del desarrollo de aplicaciones. Algunas consignas son espec√≠ficas, pero otras son un poco m√°s abiertas, con la intenci√≥n de familiarizarnos con formatos narrativos en la solicitud de funcionalidades a programar.
Notas:  hay ejercicios que presentan una nota, la cual nos brinda m√°s informaci√≥n o tips para desarrollarlo 
(nota: modo hardcore hacerlo sin leer las notas).
Resoluciones propuestas: encontrar√°s las resoluciones para que las compares con tus propias soluciones. Es propuesta porque no es perfecta, en desarrollo de software ninguna soluci√≥n es infalible, y mucho depende del contexto, por lo cual si tu resoluci√≥n presenta una funcionalidad  similar o mejor a la propuesta ¬°felicidades, resolviste el ejercicio!. 
Repositorio en GitHub: Podr√°s encontrar las resoluciones alojadas en GitHub.
Podemos identificar los elementos en:

N√∫meros, cadenas de caracteres, listas y tuplas
Gu√≠a complementaria - Parte 1
Obligatoria siempre

Actividad 1
Calculadora base
Escribe un programa que solicite al usuario dos n√∫meros enteros. Luego, muestra por pantalla la suma, resta, multiplicaci√≥n y divisi√≥n de esos dos n√∫meros.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Los √∫ltimos caracteres r√≠en mejor
Crea un programa que tome una cadena de texto como entrada del usuario. Luego, muestra por pantalla los primeros tres caracteres de la cadena, seguidos por los tres √∫ltimos caracteres. Adem√°s, concatena ambos subconjuntos y muestra el resultado.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 3
Aclaraciones

Corrobora que el √≠ndice que solicitas al usuario no exceda los √≠ndices que maneja la lista de n√∫meros enteros.
La lista de n√∫meros inicial es a elecci√≥n del programador
Actividad 3
Cambio manual
Crea un programa que inicie con una lista de n√∫meros enteros. Luego, solicita al usuario un n√∫mero entero y un √≠ndice para reemplazar un elemento en la lista por el nuevo n√∫mero ingresado en el √≠ndice ingresado. 
Imprime la lista resultante.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 4
Aclaraciones

Ten en cuenta que la primera aparici√≥n ser√≠a la posici√≥n 1 de la tupla, por lo cual deber√≠amos buscar el √≠ndice de la siguiente aparici√≥n.
Actividad 4
¬øCu√°nto y d√≥nde?
Crea un programa que, teniendo en cuenta la siguiente tupla, muestre el valor del segundo elemento de la misma. Adem√°s, debe mostrar cu√°ntas veces se repite este valor y cu√°l es el √≠ndice del valor repetido.

palabras_tupla = ("manzana", "pera", "uva", "naranja", "sand√≠a", "manzana", "pl√°tano", "kiwi", "pera", "fresa", "mango", "uva", "cereza", "manzana", "durazno")
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Conjuntos, diccionarios y m√©todos de colecciones
Gu√≠a complementaria - Parte 2
Obligatoria siempre

Notas actividad 1
Aclaraciones

Para separar los nombres recuerda que puedes utilizar split.
Actividad 1
Nombres √∫nicos
Crea un programa que solicite al usuario ingresar nombres separados por comas. Luego, crea un conjunto con los nombres ingresados y muestra por pantalla la cantidad de nombres √∫nicos en el conjunto.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Actualizando la tienda
Crea un programa que simule un inventario de productos en una tienda. Inicia con un diccionario que contenga algunos productos y sus cantidades. Luego, permite al usuario agregar un nuevo producto con su cantidad y actualizar la cantidad de un producto existente. Muestra el inventario actualizado.

Productos y cantidades:
Manzanas => 50
Bananas => 30
Peras => 40
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Python uno, Python dos, Python 3...
Crea un programa que tome una oraci√≥n ingresada por el usuario y realice las siguientes operaciones: convierte la oraci√≥n a may√∫sculas, cuenta cu√°ntas veces aparece la palabra "python", y muestra la oraci√≥n sin espacios en blanco al inicio y al final.


Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 4
Aclaraciones

Recuerda el uso de split para separar valores de un string.
Actividad 4
Intersectando y uniendo
Crea dos conjuntos con n√∫meros ingresados por el usuario y separados por coma. 
Luego, muestra cu√°les elementos tienen en com√∫n los conjuntos y crea un nuevo conjunto que contenga la uni√≥n de ambos.


Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Operadores b√°sicos, expresiones anidadas y controladores de flujo
Gu√≠a complementaria - Parte 3
Obligatoria siempre

Actividad 1
Paresitos
Crea un programa que solicite dos n√∫meros enteros al usuario y determine si ambos son n√∫meros pares.
.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
x 3, x 5
Escribe un programa que tome un n√∫mero entero ingresado por el usuario y determine si es un n√∫mero par, divisible por 3 y 5 al mismo tiempo, o ninguno de los anteriores.
.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
¬°Positivo! ¬øPar s√≠ o par no?

Crea un programa que solicite un n√∫mero entero al usuario y determine si es un n√∫mero negativo, positivo o igual a cero. En caso de ser positivo, verifica si es par o impar.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 4
Alineando la condicional
Escribe un programa que tome un n√∫mero entero ingresado por el usuario y muestre "Es positivo" si el n√∫mero es mayor que cero, de lo contrario, muestra "No es positivo".

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Controladores de flujo II
Gu√≠a complementaria - Parte 4
Obligatoria siempre

Notas actividad 1
Aclaraciones

En este ejercicio deber√°s utilizar 2 bucles anidados. Uno para todo y el otro para la generaci√≥n de la tabla.
Actividad 1
Hay tabla
Escribe un programa que tome un n√∫mero entero positivo ingresado por el usuario y muestre la tabla de multiplicar de ese n√∫mero. Repite la solicitud al usuario de ingresar un nuevo n√∫mero hasta que ingrese un cero.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 2
Aclaraciones

Recuerda usar el split para separar un string. Tambi√©n ten presente la funcionalidad enumerate.
Actividad 2
Ubica la palabra
Escribe un programa que tome una lista de nombres ingresados por el usuario separados por un espacio y los liste mostrando su ubicacion.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 3
Aclaraciones

Podemos utilizar el operador ‚Äòin‚Äô para corroborar si tiene vocales o no üòâ
Actividad 3
¬øVocales perdidas?
Crea un programa que solicite al usuario ingresar una palabra. Luego, recorre la palabra y cuenta cu√°ntas vocales contiene. Al final, si no se encontraron vocales, muestra un mensaje comunicando que la palabra ingresada solo contiene consonantes.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 4
Aclaraciones

Recuerda usar slice para cortar un string.
Actividad 4
Salteando palabras
Escribe un programa que tome una lista de palabras ingresadas por el usuario. Luego, que muestre cada palabra una por una. Si la palabra es "salir", finaliza el programa. Si la palabra es "omitir", se pasa a la siguiente iteraci√≥n. Al final, si ninguna palabra fue "salir", muestra un mensaje avisando la situaci√≥n.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 5
Inventario
Imagina que est√°s administrando un peque√±o almac√©n y deseas realizar un seguimiento de los productos en tu inventario. Escribe un programa que te permita ingresar el nombre y la cantidad de varios productos. Utiliza un bucle para recorrer los productos y mostrar su nombre y cantidad. Al final, muestra el total de productos en el inventario.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 5
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Funciones
Gu√≠a complementaria - Parte 5
Obligatoria siempre

Notas actividad 1
Aclaraciones

Utiliza una lista y funciones separadas para gestionar las tareas.
Actividad 1
Gesti√≥n de tareas pendientes
Crea un programa que permita a un usuario llevar un registro de tareas pendientes. El programa debe:
Permitir al usuario agregar tareas.
Marcar tareas como completadas. agreg√°mdole un tilde o algo que identifique que se complet√≥ al principio de la tarea.
Listar las tareas pendientes. 

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 2
Aclaraciones

Utiliza un diccionario para gestionar los contactos y funciones separadas para realizar estas acciones.
Actividad 2
Contactame

Desarrolla un programa que permita a un usuario registrar informaci√≥n de contactos (nombre, n√∫mero de tel√©fono y correo electr√≥nico). El programa debe almacenar estos contactos y permitir al usuario buscar contactos por nombre o n√∫mero de tel√©fono. 

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 3
Aclaraciones

Utiliza kwargs como par√°metro de la funci√≥n permitiendote pasar cualquier llave-valor a la funci√≥n.
Actividad 3
Red de computadora
Crea un programa que permita a un usuario configurar la red de una computadora. El programa debe aceptar argumentos clave para configurar la direcci√≥n IP, la m√°scara de subred y la puerta de enlace. Luego, muestra la configuraci√≥n de red completa.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 4
Aclaraciones

Deber√°n utilizar *args como parametro para que se permita el n√∫mero variado de notas.
Actividad 4
Tu promedio

Crea un programa que permita calcular el promedio de un n√∫mero variable de notas ingresadas por el usuario. La funci√≥n calcular_promedio puede recibir un n√∫mero variable de notas. 
Luego, muestra el promedio de las notas ingresadas.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Actividad 3
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Excepciones y POO
Gu√≠a complementaria - Parte 6
Obligatoria siempre

Actividad 1
B√∫squeda del error

Desarrolla un programa que permita al usuario buscar informaci√≥n sobre ciudades. Tendr√°s un diccionario llamado ciudades_info que contiene informaci√≥n sobre algunas ciudades, como su pa√≠s, poblaci√≥n y puntos de inter√©s. El programa debe permitir al usuario ingresar el nombre de una ciudad y mostrar la informaci√≥n correspondiente. El programa debe poder manejar el caso en el que la ciudad no existe en el diccionario y mostrando un mensaje avisando del error.
ciudades_info = {
    'Paris': {
        'Pais': 'Francia',
        'Poblacion': 2187526,
        'Puntos_de_Interes': ['Torre Eiffel', 'Louvre', 'Catedral de Notre-Dame']
    },
    'Nueva York': {
        'Pais': 'Estados Unidos',
        'Poblacion': 8398748,
        'Puntos_de_Interes': ['Estatua de la Libertad', 'Central Park', 'Times Square']
    },
    'Tokio': {
        'Pais': 'Jap√≥n',
        'Poblacion': 13929286,
        'Puntos_de_Interes': ['Torre de Tokio', 'Templo Senso-ji', 'Palacio Imperial']
    }
}
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.




La funci√≥n raise se utiliza para generar manualmente una excepci√≥n en Python. Puedes especificar el tipo de excepci√≥n que deseas generar y opcionalmente proporcionar un mensaje de error personalizado. Por ejemplo:
```
# Generar una excepci√≥n ValueError con un mensaje personalizado
raise ValueError("Este es un mensaje de error personalizado.")
```
En el ejemplo anterior, se genera una excepci√≥n ValueError con el mensaje "Este es un mensaje de error personalizado." Esta funcionalidad puede ser √∫til cuando deseas controlar el flujo de tu programa y generar excepciones espec√≠ficas en funci√≥n de condiciones personalizadas.
Actividad 2
Edad correcta
Escribe un programa que permita al usuario ingresar su edad. El programa debe validar si la edad ingresada est√° dentro del rango de 18 a 65 a√±os, y mostrar un mensaje correspondiente. Utiliza un bloque try-except con m√∫ltiples bloques except para manejar posibles errores relacionados con la entrada del usuario, como una entrada no num√©rica o una edad fuera del rango v√°lido.
Tip: puedes usar la funcionalidad 'raise' para que se genere una excepci√≥n.
Notas actividad 2
Aclaraciones
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 3
Aclaraciones

Utiliza un bloque try-except con varios bloques except para manejar estos errores y mostrar mensajes de error espec√≠ficos en cada caso. Ten en cuenta el uso de la instrucci√≥n raise comentada en la actividad anterior de ser necesario su uso.
Actividad 3
Estamos de oferta
Escribe un programa que permita al usuario ingresar el precio de un producto y un c√≥digo de descuento. El programa debe validar si el precio es un n√∫mero positivo y si el c√≥digo de descuento es v√°lido. Los errores posibles incluyen entradas no num√©ricas, n√∫meros negativos y c√≥digos de descuento no v√°lidos. 

Los codigos de descuento son:
 descuentos_validos = ["DESC10", "DESC20", "DESC30"]
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

POO II y Herencia
Gu√≠a complementaria - Parte 7
Obligatoria siempre

Actividad 1
Figuras
Define una clase Figura con un m√©todo de instancia area que devuelve el √°rea de la figura. Luego, crea clases hijas como Circulo y Rectangulo que hereden de Figura y proporcionen implementaciones diferentes del m√©todo area.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Calculadora POO
Crea una clase Calculadora con un m√©todo de clase llamado suma que acepte dos n√∫meros como argumentos y devuelva la suma de ellos. Luego, utiliza este m√©todo para realizar algunas operaciones de suma.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 3
Aclaraciones

Recuerda utilizar el super para ejecutar el init de una clase padre.
Actividad 3
Gesti√≥n de empleados
Crea una clase Empleado que tenga los siguientes atributos de instancia: nombre, apellido, edad, salario. Luego, crea una clase Gerente que herede de Empleado y tenga un atributo adicional departamento. Define m√©todos de instancia para ambas clases, como mostrar_informacion para mostrar los detalles de un empleado y aumentar_salario para aumentar el salario de un empleado en un porcentaje dado. Crea instancias de ambas clases y realiza algunas operaciones.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Notas actividad 4
Aclaraciones

Para modificar un atributo de clase podes hacer lo siguiente:

Casa.atributo_de_clase = ‚Äòprueba‚Äô

En este ejemplo se toma Casa como la clase y el atributo atributo_de_clase, donde se guarda un string (esto puede hacerse desde los metodos.)
Actividad 4
La biblioteca
Crea una clase Libro con atributos de instancia como titulo, autor, a√±o_publicacion, y disponible (un valor booleano que indica si el libro est√° disponible o no). Luego, crea una clase Biblioteca que tenga una lista de libros y m√©todos de instancia para prestar un libro, devolver un libro y mostrar todos los libros disponibles. Utiliza atributos de clase para registrar la cantidad total de libros en la biblioteca. Crea instancias de ambas clases y realiza operaciones de pr√©stamo y devoluci√≥n de libros.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 5
Tienda en l√≠nea
Crea una clase Producto con atributos de instancia como nombre, precio, cantidad_disponible y codigo_producto. Luego, crea una clase CarritoCompras que permita a los clientes agregar productos, eliminar productos y calcular el total de la compra. Utiliza un atributo de clase para rastrear la cantidad total de productos en el carrito de compras de todos los clientes. Crea instancias de ambas clases y simula operaciones de compra.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 5
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Scripts, m√≥dulos, paquetes y manejo de archivos
Gu√≠a complementaria - Parte 8
Obligatoria siempre

Actividad 1
Registrando gastos

Escribe un programa en Python que permita a un usuario registrar sus gastos diarios en un archivo de texto llamado "gastos.txt". El programa debe permitir al usuario ingresar la descripci√≥n del gasto y la cantidad gastada. Luego, debe guardar estos datos en el archivo en el siguiente formato:

"Fecha: {fecha} - Descripci√≥n: {descripci√≥n} - Cantidad: {cantidad}"

Donde fecha es la fecha actual y descripci√≥n y cantidad son los datos ingresados por el usuario.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Gesti√≥n de tareas pendientes (Con persistencia de datos)
Bas√°ndonos en el ejercicio 1 de funciones, edita el c√≥digo para que
el programa guarde el listado de tareas en un json al terminar la ejecuci√≥n del programa y
lo recupere al iniciarse el mismo.
Notas actividad 2
Aclaraciones

Ten en cuenta que el modo read del open genera un error al querer abrir un archivo que no existe.
 Y, a diferencia del read en los txt, el json.load tambi√©n genera un error si el archivo no tiene nada.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Registro de calificaciones

Escribe un programa que permita a un profesor registrar las calificaciones de sus estudiantes en un archivo json llamado "calificaciones.json".
El programa debe permitir al profesor ingresar nombres de estudiantes y sus calificaciones. Luego, debe guardar estos datos en el archivo cuando termine el programa para
persistir estos datos para futuras ejecuciones del programa. Utilizar los nombres de los alumnos como claves y las notas como valores.
Notas actividad 3
Aclaraciones

Ten en cuenta que el modo read del open genera un error al querer abrir un archivo que no existe.
 Y, a diferencia del read en los txt, el json.load tambi√©n genera un error si el archivo no tiene nada.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 4
Metiendo a la bolsa

Con las funciones de los ejercicios anteriores, sep√°ralas en 2 o m√°s m√≥dulos y
genera un paquete que incluya estos m√≥dulos.
Notas actividad 4
Aclaraciones

Recuerda que en los m√≥dulos deben ir solo c√≥digo que sea de definici√≥n y, en caso de
querer agregar c√≥digo de ejecuci√≥n en alguno de los m√≥dulos, debe agregarse dentro de la siguiente condicional

if __name__ == '__main__':
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Actividad 4
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Git, GitHub y Django
Gu√≠a complementaria - Parte 9
Obligatoria siempre

Actividad 1
Repasemos Git

Sigamos las siguientes instrucciones para practicar un poco el uso de git‚Ä¶

1. Crea una carpeta nueva y abrirla para trabajar en ella.
2. Inicializa un repositorio de git.
3. Crea una rama por cada parte de la gu√≠a, hasta la parte 8 inclusive, de ejercicios en esta gu√≠a (parte1, parte2, parte3, etc).
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

4. Por cada rama de las partes, seguir los siguientes pasos:
Crear una carpeta con el nombre de la rama.
Dentro de la carpeta crear para la actividad 1 un archivo que contenga la resoluci√≥n y luego hacer un commit con el mensaje ‚ÄúActividad 1‚Äù.
Repetir el punto anterior para las actividades restantes.
5. Luego, volver a la rama principal (master o main, depende como lo tengan configurado) y hacer un merge por cada una de las ramas de las partes.
6. Por √∫ltimo, hacer un push a un repositorio creado en github.

Con esto dejaremos todo lo que ten√≠a cada rama (cada carpeta de actividades) en la rama principal.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

A partir de la siguiente actividad, cada parte tiene su propia rama con las actividades resueltas. Esto se maneja de esta forma, debido a que haremos un proyecto de django repasando todo lo visto en clases y con el manejo de ramas se puede ir viendo el progreso escalonado delimitado, por lo que van solicitando las actividades.
Contenido destacado
PARA RECORDAR
[Optativa: Utilizar esta slides en caso de que se requiera destacar alg√∫n contenido. Se√±alar en ‚ÄúNotas al orador‚Äù la duraci√≥n (en minutos) que se sugiere para el momento de exposici√≥n teniendo en cuenta que el foco de las clases  es la pr√°ctica]

Profe:  Para esta instancia te sugerimos utilizar (cantidad) de minutos.


Actividad 2
Repaso creaci√≥n de proyecto

Crea un proyecto de Django siguiendo los pasos vistos en clase.

Este proyecto deber√° contar con 2 vistas:
1. La primera deber√° enviar por HttpResponse un string que indique en qu√© a√±o aproximadamente naci√≥ una persona si le pasamos por la url la edad (para revisar si un string es solo num√©rico se puede usar el m√©todo .isnumeric() de los strings que devuelve True en caso de que sean solo n√∫meros).
2. La segunda solo requerir√° que en lugar de pasarle un string como argumento al HttpResponse se le pase un template en el cual se mostrar√° un mensaje que diga "Bienvenidos".
La url de acceso deber√° ser 'bienvenida/'.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Actividad 2
Esta actividad puede ser guiada revisando los commits de la rama master o pas√°ndose a las diferentes ramas de las partes espec√≠ficas. Esto es debido a que se sigui√≥ los mismos pasos para armar este repositorio as√≠ lo tienen como gu√≠a.

Punto 1 : Disponible aqu√≠

Punto 2 : Disponible aqu√≠
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Portfolio y Playground intermedio parte I
Gu√≠a complementaria - Parte 10
Obligatoria siempre

Actividad 1
Trabajemos con apps
A partir de este punto las actividades siguientes se centrar√°n en la modificaci√≥n y mejora del proyecto que se arranc√≥ en la actividad 2 de la ejercitaci√≥n de Git, GitHub y Django.
Teniendo esto en cuenta, realiza las siguientes modificaciones:
1. Crea una app 'inicio' a la cual le trasladaremos las vistas creadas en la actividad pasada. Recuerda modificar el setting.py para que nuestro proyecto reconozca la app creada. (una vez trasladadas las vistas eliminar el archivo views.py que quedo vac√≠o)
2. Genera el archivo urls.py para nuestra app y agrega el c√≥digo correspondiente en el urls.py que se encuentra con el settings.py para que se conecte al urls.py de nuestra app (uso de la funcionalidad "include" ).
3. Cambia la carga actual de templates en las vistas por el uso de render (el shortcut). Cambia la ubicaci√≥n de los templates para que est√©n dentro de la app que le corresponda.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Usemos un template predefinido
Busca en starbootstrap un template que te guste, desc√°rgalo e implem√©ntalo (con los cambios que sientas necesario en el HTML) en el proyecto en una vista llamada inicio dentro de la app inicio.
Para esta vista define el path de la url vac√≠o.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Guardo y muestro
1. Crear un modelo que cuente con 3 atributos: nombre(charfield), edad(integerfield) y fecha(datefield). Para este modelo agrega una vista que tome por url 2 par√°metros, uno para el charfield, otro para el integerfield y el datefield lo rellenaremos con la fecha del momento cuando se crea. Teniendo estos datos en la vista, genera un objeto para guardarlo en la base de datos y, tambi√©n, para pasarlo por contexto a un template que crearemos.
2. El template del punto anterior deber√° mostrar nombre y edad. Adem√°s, en caso que el dia del campo fecha sea mayor a 15 se deber√° mostrar en un listado cada letra del nombre.

Recordatorio: Una vez creado un modelo ejecutar el comando makemigrations y luego migrate para que se plasme la creaci√≥n del modelo en la bd.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Parte 1: Disponible aqu√≠
Parte 2: Disponible aqu√≠
Parte 3: Disponible aqu√≠
Actividad 2
Disponible aqu√≠
Actividad 3
Parte 1: Disponible aqu√≠
Parte 2: Disponible aqu√≠
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Playground Intermedio parte II
Gu√≠a complementaria - Parte 11
Obligatoria siempre

Actividad 1
Figuras formularios y listado
Crea un nuevo modelo Paleta con 4 atributos: marca(charfield), modelo(charfield), anio(integerfield), nueva(booleanfield). El modelo deber√° tener una vista para el formulario de creaci√≥n y otra para el listado de paletas creadas (esta √∫ltima deber√° incluir un formulario de b√∫squeda).

Aviso: Los formularios de creaci√≥n y b√∫squeda tambi√©n deben crearse en esta actividad.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
Mejora de templates y panel de admin
Acomoda los templates para que implementen herencia, mitigando la repetici√≥n de c√≥digo. Adem√°s, acomoda en la barra de navegaci√≥n el acceso a las vistas de 'inicio', 'crear_paleta' y 'buscar_paleta'.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Apartado admin

Registra los modelos en el apartado de admin. Luego accede al mismo y prueba crear, modificar, ver, eliminar paletas. 
Agrega en los modelos registrados el metodo magico `__str__` para que el listado del admin sea m√°s legible.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Ejemplos de soluci√≥n 
Actividad 1
Disponible aqu√≠
Actividad 2
Disponible aqu√≠
Actividad 3
Disponible aqu√≠
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Playground avanzado parte I
Gu√≠a complementaria - Parte 12
Obligatoria siempre

Actividad 1
Edita y borra
Al modelo paleta agr√©gale una vista para la actualizar datos y otra para eliminar paletas. (No utilizar Clases Basadas en Vistas)
En este punto, modifica el nav de la app para que a la vista de creaci√≥n se acceda desde la vista de b√∫squeda/listado y el acceso a actualizar o borrar est√©n en botones junto a cada paleta del listado.

IMPORTANTE: Para no requerir validar en la vista de qu√© tipo tiene que ser el par√°metro que se pasa por la url podemos en la url cuando definimos el nombre del par√°metro, ejemplo `'paletas/editar/<paleta_id>/'`, ind√≠cale de qu√© tipo queremos que nuestra app detecte que va a ser, ejemplo `'paletas/editar/<int:paleta_id>/'`.
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
CBV
Crea un nuevo modelo PelucheAnimal con 4 atributos: animal(charfield), altura(floatfield), fecha(datefield). El modelo deber√° contar con una CBV para cada una de las siguientes funcionalidades: crear, listar (incluir el buscador), editar, eliminar y mostrar m√°s detalles del mismo. 
Recuerda registrar el modelo en el apartado de admin. 
 
IMPORTANTE: En la CBV del listado se deben encontrar los accesos a todas las dem√°s vistas, esta debe ser la √∫nica accesible desde la barra de navegaci√≥n de la pagina.  

EXTRA: Puedes crear otra app llamada peluche y aca contener todo lo relacionado a PelucheAnimal (y tal vez a futuro sobre peluches en general).
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Autenticaci√≥n
Agr√©gale al proyecto una nueva app llamada cuentas y luego:

1. Agrega a cuentas un vista para el login (usar un formulario custom que pida el mail adem√°s de el usuario y la contrase√±a) y una vista para el logout.
2. Ahora, una vista para que un usuario pueda registrarse en nuestra app.
3. Agrega a las vistas de edici√≥n y borrado de los modelos creados hasta el momento (Paleta y PelucheAnimal) el decorador o mixin, seg√∫n corresponda, para limitar el acceso estas funcionalidades a personas que no est√°n logueadas.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 3
Parte 1: Disponible aqu√≠
Parte 2: Disponible aqu√≠
Parte 3: Disponible aqu√≠
Actividad 2
Disponible aqu√≠
Actividad 1
Disponible aqu√≠
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Playground avanzado parte II y pr√≥ximos pasos en el mundo de la programaci√≥n
Gu√≠a complementaria - Parte 13
Obligatoria siempre

Actividad 1
M√°s datos
Teniendo en cuenta que pocos son los datos que podemos guardar de un usuario, crea un modelo que est√© relacionado con User y permita guardar un avatar y alg√∫n dato extra sobre el usuario (ej, pagina, biograf√≠a, fecha de nacimiento, etc).
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 2
El perfil

Agrega un apartado donde el usuario pueda ver su informaci√≥n (nombre, apellido, avatar, etc) y que tenga un acceso a un apartado para modificar dicha informaci√≥n (tambi√©n que se pueda modificar la contrase√±a).
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Actividad 3
Ver y describir el peluche

Agr√©gale al peluche animal un atributo para cargarle una imagen y una descripci√≥n, para esta √∫ltima permitir que sea con formato de texto enriquecido. Ambos campos deben ser incluidos en todas las vistas relacionadas a peluche animal.

Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.

Resoluciones

Ejemplos de soluci√≥n 
Actividad 1
Disponible aqu√≠
Actividad 2
Disponible aqu√≠
Actividad 3
Disponible aqu√≠
Usar para slides de texto e imagen. Si no alcanza, no sobrecargar, usar otra con el mismo t√≠tulo para indicar que contin√∫a el mismo m√≥dulo.
